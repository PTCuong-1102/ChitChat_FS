version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chitchat-postgres
    environment:
      POSTGRES_DB: chitchatdb
      POSTGRES_USER: chitchat
      POSTGRES_PASSWORD: chitchat123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - chitchat-network
    restart: unless-stopped

  # ChitChat Backend Application
  chitchat-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chitchat-backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chitchatdb
      SPRING_DATASOURCE_USERNAME: chitchat
      SPRING_DATASOURCE_PASSWORD: chitchat123
      JWT_SECRET_KEY: "your-super-secret-jwt-key-for-development-only"
      CORS_ALLOWED_ORIGINS: "http://localhost:3000"
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
    networks:
      - chitchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis for Session Management (Optional)
  redis:
    image: redis:7-alpine
    container_name: chitchat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chitchat-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  chitchat-network:
    driver: bridge
